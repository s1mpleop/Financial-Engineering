# -*- coding: utf-8 -*-
"""180123048_lab04_q3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DFHZZhM66ckC4dU1FzOYuefPxWC7q0FV
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import minimize

def get_ret(w):
    return np.dot(w, mu)

def get_risk(w):
    return (np.matmul(np.matmul(w, cov), np.transpose(w)))**0.5

def efficient_frontier(M):
    R = []
    W = []
    w = []
    x = 0
    y = 0
    r = 0
    for i in range(len(M)):
        cons = (
            {'type': 'eq', 'fun': lambda w: np.sum(w)-1},
            {'type': 'eq', 'fun': lambda w: get_ret(w)-M[i]}
        )
        res = minimize(get_risk, np.array([0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]), method='SLSQP', constraints=cons)
        R.append(res.fun)
        W.append(res.x)
        if abs((M[i]-0.1)/R[i]) > r:
            r = abs((M[i]-rf)/R[i])
            x = R[i]
            y = M[i]
            w = W[i]
    return W, R, x, y, w

from google.colab import files
files.upload()

dataset = pd.read_csv('data1.csv')
dataset

stock_name = dataset.iloc[:, 1:].columns
asset_prices = dataset.iloc[:60, 1:].to_numpy()
ret = []
for i in range(len(asset_prices[0])):
    temp = []
    for j in range(1, len(asset_prices)):
        temp.append(365*(asset_prices[j][i]-asset_prices[j-1][i])/asset_prices[j-1][i])
    ret.append(temp)
mean_ret = []
for r in ret:
    mean_ret.append(np.mean(r))
cov = np.cov(ret)
mu = mean_ret
u = np.ones((1, len(mu)))
M = np.linspace(-2, 2, 1000)
rf = 0.05
W, R, market_risk, market_ret, market_w = efficient_frontier(M)

ymax = 3
xmax = market_risk+market_risk*(ymax-market_ret)/(market_ret-rf)

plt.plot(R, M, color='green', label='Markowitz Efficient Frontier')
plt.title('Markowitz Efficient Frontier')
plt.xlabel('Volatility')
plt.ylabel('Return')
plt.grid()
plt.legend()
plt.show()

plt.plot(np.array([0, xmax]), np.array([rf, ymax]), color='deepskyblue', label='Capital Market Line')
plt.annotate("  Market Portfolio("+str(round(market_risk, 3))+","+str(round(market_ret, 3))+")", (market_risk, market_ret))
plt.annotate("  Zero Risk Portfolio("+str(0)+","+str(rf)+")", (0, rf))
plt.plot(R, M, color='green', label='Markowitz Efficient Frontier')
plt.title('Markowitz Efficient Frontier')
plt.xlabel('Volatility')
plt.ylabel('Return')
plt.grid()
plt.legend()
plt.show()

X = np.linspace(-1, 1, 1000)
for i in range(len(mu)):
    Y = rf + (mu[i]-rf)*X
    plt.plot(X, Y, label = stock_name[i])
plt.title("Security Market Lines")
plt.xlabel("Beta")
plt.ylabel("Mean Return")
plt.legend()
plt.grid()
plt.show()